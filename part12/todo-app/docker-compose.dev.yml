services:
  nginx:
    image: nginx:1.23.3-alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      todo-frontend-dev:
        condition: service_started
      todo-backend-dev:
        condition: service_healthy

  todo-frontend-dev:
    build:
      context: ./todo-frontend
      dockerfile: dev.Dockerfile
    volumes:
      - ./todo-frontend:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - VITE_BACKEND_URL=/api

  todo-backend-dev:
    build:
      context: ./todo-backend
      dockerfile: dev.Dockerfile
    volumes:
      - ./todo-backend:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - MONGO_URL=mongodb://mongo:27017/the_database
      - REDIS_URL=redis://redis:6379
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/healthz"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 60s


  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mongo-data:
  redis-data: