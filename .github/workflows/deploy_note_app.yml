name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: notes-app-service
  REGION: us-central1
  GAR_LOCATION: us-central1 # Location for Artifact Registry

jobs:
  test:
    name: Build and Test Suite
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7

      - name: Set up Node.js
        uses: actions/setup-node@v4.0.3
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      # Backend setup and tests
      - name: Install backend dependencies
        working-directory: ./part3/notes_fullstack
        run: npm ci

      - name: Lint backend code
        working-directory: ./part3/notes_fullstack
        run: npm run lint

      - name: Run backend unit tests
        working-directory: ./part3/notes_fullstack
        run: npm test
        env:
          TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
          SECRET: ${{ secrets.SECRET }}

      # Frontend setup and build
      - name: Install frontend dependencies
        working-directory: ./part2/notes_frontend
        run: npm ci

      - name: Lint frontend code
        working-directory: ./part2/notes_frontend
        run: npm run lint

      - name: Build frontend for E2E tests
        working-directory: ./part3/notes_fullstack
        run: npm run build:ui

      # E2E tests
      - name: Install Playwright browsers
        working-directory: ./part3/notes_fullstack
        run: npx playwright install --with-deps

      - name: Run Playwright E2E tests
        working-directory: ./part3/notes_fullstack
        run: npm run test:e2e
        env:
          TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
          SECRET: ${{ secrets.SECRET }}

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4.3.4
        if: always()
        with:
          name: playwright-report
          path: part3/notes_fullstack/playwright-report/
          retention-days: 10

      - name: Upload build artifact for deployment
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v4.3.4
        with:
          name: production-build
          path: part3/notes_fullstack/dist

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Deploy to Cloud Run
    needs: test
    runs-on: ubuntu-24.04
    permissions:
      contents: 'read'
      id-token: 'write' # Required for Workload Identity Federation
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7

      - name: Download build artifact
        uses: actions/download-artifact@v4.1.8
        with:
          name: production-build
          path: part3/notes_fullstack/dist

      - name: Authenticate to Google Cloud
        id: auth
        uses: 'google-github-actions/auth@v2.1.3'
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

      - name: Build and push Docker image to Artifact Registry
        run: |
          docker build . -f part3/notes_fullstack/Dockerfile -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
          docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

      - name: Deploy image to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --region ${{ env.REGION }} \
            --allow-unauthenticated \
            --set-env-vars "MONGODB_URI=${{ secrets.MONGODB_URI }},SECRET=${{ secrets.SECRET }}"

  tag_release:
    name: Tag Release
    needs: [deploy]
    runs-on: ubuntu-24.04
    permissions:
      contents: 'write' # Required to push new tags
    # Skip tagging if the commit message contains #skip for push events on the target branch
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, '#skip') }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7

      - name: Bump version and push tag
        id: tag_version
        uses: anothrNick/github-tag-action@1.73.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_PREFIX: v
          DEFAULT_BUMP: patch

      - name: Log new tag
        run: echo "New tag is ${{ steps.tag_version.outputs.tag }}"